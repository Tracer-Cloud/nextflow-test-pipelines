name: Nextflow Linux x86_64 Amazon Linux Pipelines

on:
  workflow_dispatch:
  push:
    paths:
      - "pipelines/linux-x86-amazon-linux/**"
      - ".github/workflows/linux-x86-amazon-lin.yml"
  pull_request:
    branches:
      - main
    paths:
      - "pipelines/linux-x86-amazon-linux/**"
      - ".github/workflows/linux-x86-amazon-lin.yml"
  schedule:
    - cron: "0 11 * * *" # Daily at 11:00 UTC

jobs:
  linux-x86-amazon-pixi:
    name: Pixi Pipeline
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/amazonlinux/amazonlinux:2023
    steps:
      - name: Install system dependencies
        run: |
          yum update -y
          yum install -y curl wget git bash which sudo tar gzip

      - uses: actions/checkout@v4

      - name: Cache Pixi environment
        uses: actions/cache@v4
        with:
          path: |
            pipelines/linux-x86-amazon-linux/.pixi
          key: pixi-linux-x86-amazon-${{ runner.os }}-${{ hashFiles('pipelines/linux-x86-amazon-linux/pixi.toml') }}
          restore-keys: |
            pixi-linux-x86-amazon-${{ runner.os }}-

      - name: Install Pixi dependencies
        working-directory: pipelines/linux-x86-amazon-linux/nextflow-pixi
        run: |
          export PATH="$HOME/.pixi/bin:$PATH"
          pixi install || true

      - name: Install tracer
        continue-on-error: true
        run: |
          echo "Installing tracer..."
          if curl -sSL https://install.tracer.cloud/binary-installer.sh | bash -s ci_cd_user_123; then
            echo "✅ Binary installer completed"
          else
            echo "⚠️ Binary installer failed, trying standard installer..."
            curl -sSL https://install.tracer.cloud/ | bash || echo "Standard installer also failed"
          fi
          source ~/.bashrc 2>/dev/null || true
          source ~/.bash_profile 2>/dev/null || true
          source ~/.zshrc 2>/dev/null || true
          echo "Searching for tracer binary..."
          TRACER_PATH=$(find $HOME -name "tracer" -type f 2>/dev/null | head -1)
          if [[ -n "$TRACER_PATH" ]]; then
            echo "✅ Found tracer at: $TRACER_PATH"
            mkdir -p ~/bin
            ln -sf "$TRACER_PATH" ~/bin/tracer
            sudo ln -sf "$TRACER_PATH" /usr/local/bin/tracer 2>/dev/null || echo "Could not create /usr/local/bin symlink"
            echo "✅ Tracer installation completed successfully"
          else
            echo "❌ Tracer binary not found after installation"
            echo "Installation may have failed, but continuing..."
          fi
          echo "$HOME/bin" >> $GITHUB_PATH
          echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Run tracer init
        run: |
          echo "Searching for tracer binary..."
          POSSIBLE_PATHS=(
            "$HOME/bin/tracer"
            "$HOME/.local/bin/tracer"
            "$HOME/.tracerbio/bin/tracer"
            "/usr/local/bin/tracer"
            "/opt/tracer/bin/tracer"
          )
          TRACER_PATH=""
          for path in "${POSSIBLE_PATHS[@]}"; do
            if [ -f "$path" ]; then
              echo "✅ Found tracer at: $path"
              TRACER_PATH="$path"
              break
            fi
          done
          if [ -z "$TRACER_PATH" ]; then
            echo "Searching entire system for tracer binary..."
            FOUND_TRACER=$(find $HOME -name "tracer" -type f 2>/dev/null | head -1)
            if [ -n "$FOUND_TRACER" ]; then
              echo "✅ Found tracer at: $FOUND_TRACER"
              TRACER_PATH="$FOUND_TRACER"
            fi
          fi
          if [ -n "$TRACER_PATH" ] && [ -f "$TRACER_PATH" ]; then
            echo "Running tracer init with: $TRACER_PATH"
            sudo env "PATH=$PATH" "$TRACER_PATH" init --pipeline-name github-actions --environment github-actions --user-operator github-actions --pipeline-type nextflow --is-dev true
          else
            echo "❌ Tracer binary not found anywhere on the system"
            echo "This might indicate the tracer installation failed"
            echo "Skipping tracer init..."
          fi

      - name: Run pipeline with Pixi
        working-directory: pipelines/linux-x86-amazon-linux/nextflow-pixi
        run: |
          export PATH="$HOME/.pixi/bin:$PATH"
          echo "=== Running Nextflow Pipeline with Pixi ==="
          ./run.sh

      - name: Verify tracer packages
        run: |
          echo "Searching for tracer binary..."
          POSSIBLE_PATHS=(
            "$HOME/bin/tracer"
            "$HOME/.local/bin/tracer"
            "$HOME/.tracerbio/bin/tracer"
            "/usr/local/bin/tracer"
            "/opt/tracer/bin/tracer"
          )
          TRACER_PATH=""
          for path in "${POSSIBLE_PATHS[@]}"; do
            if [ -f "$path" ]; then
              echo "✅ Found tracer at: $path"
              TRACER_PATH="$path"
              break
            else
              echo "❌ Not found at: $path"
            fi
          done
          if [ -z "$TRACER_PATH" ]; then
            echo "Searching entire system for tracer binary..."
            FOUND_TRACER=$(find $HOME -name "tracer" -type f 2>/dev/null | head -1)
            if [ -n "$FOUND_TRACER" ]; then
              echo "✅ Found tracer at: $FOUND_TRACER"
              TRACER_PATH="$FOUND_TRACER"
            fi
          fi
          if [ -n "$TRACER_PATH" ] && [ -f "$TRACER_PATH" ]; then
            echo "Running tracer info with: $TRACER_PATH"
            sudo env "PATH=$PATH" "$TRACER_PATH" info
          else
            echo "❌ Tracer binary not found anywhere on the system"
            echo "This might indicate the tracer installation failed"
            echo "Continuing without tracer verification..."
          fi

      - name: Upload pipeline results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pixi-linux-x86-amazon-pipeline-results
          path: |
            pipelines/linux-x86-amazon-linux/nextflow-pixi/results/
          retention-days: 7

  linux-x86-amazon-conda:
    name: Conda Pipeline
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/amazonlinux/amazonlinux:2023
    steps:
      - name: Install system dependencies
        run: |
          yum update -y
          yum install -y curl wget git bash which sudo bzip2 tar gzip

      - uses: actions/checkout@v4

      - name: Install Miniconda
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p "$HOME/miniconda"
          echo 'export PATH="$HOME/miniconda/bin:$PATH"' >> "$HOME/.bashrc"
          source "$HOME/.bashrc"

      - name: Install Nextflow
        run: |
          curl -s https://get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/

      - name: Install Conda environment
        working-directory: pipelines/linux-x86-amazon-linux/nextflow-conda
        run: |
          export PATH="$HOME/miniconda/bin:$PATH"
          conda env update -f environment-minimal.yml || true
          source "$HOME/.bashrc"

      - name: Install tracer
        continue-on-error: true
        run: |
          echo "Installing tracer..."
          if curl -sSL https://install.tracer.cloud/binary-installer.sh | bash -s ci_cd_user_123; then
            echo "✅ Binary installer completed"
          else
            echo "⚠️ Binary installer failed, trying standard installer..."
            curl -sSL https://install.tracer.cloud/ | bash || echo "Standard installer also failed"
          fi
          source ~/.bashrc 2>/dev/null || true
          source ~/.bash_profile 2>/dev/null || true
          source ~/.zshrc 2>/dev/null || true
          echo "Searching for tracer binary..."
          TRACER_PATH=$(find $HOME -name "tracer" -type f 2>/dev/null | head -1)
          if [[ -n "$TRACER_PATH" ]]; then
            echo "✅ Found tracer at: $TRACER_PATH"
            mkdir -p ~/bin
            ln -sf "$TRACER_PATH" ~/bin/tracer
            sudo ln -sf "$TRACER_PATH" /usr/local/bin/tracer 2>/dev/null || echo "Could not create /usr/local/bin symlink"
            echo "✅ Tracer installation completed successfully"
          else
            echo "❌ Tracer binary not found after installation"
            echo "Installation may have failed, but continuing..."
          fi
          echo "$HOME/bin" >> $GITHUB_PATH
          echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Run tracer init
        run: |
          echo "Searching for tracer binary..."
          POSSIBLE_PATHS=(
            "$HOME/bin/tracer"
            "$HOME/.local/bin/tracer"
            "$HOME/.tracerbio/bin/tracer"
            "/usr/local/bin/tracer"
            "/opt/tracer/bin/tracer"
          )
          TRACER_PATH=""
          for path in "${POSSIBLE_PATHS[@]}"; do
            if [ -f "$path" ]; then
              echo "✅ Found tracer at: $path"
              TRACER_PATH="$path"
              break
            fi
          done
          if [ -z "$TRACER_PATH" ]; then
            echo "Searching entire system for tracer binary..."
            FOUND_TRACER=$(find $HOME -name "tracer" -type f 2>/dev/null | head -1)
            if [ -n "$FOUND_TRACER" ]; then
              echo "✅ Found tracer at: $FOUND_TRACER"
              TRACER_PATH="$FOUND_TRACER"
            fi
          fi
          if [ -n "$TRACER_PATH" ] && [ -f "$TRACER_PATH" ]; then
            echo "Running tracer init with: $TRACER_PATH"
            sudo env "PATH=$PATH" "$TRACER_PATH" init --pipeline-name github-actions --environment github-actions --user-operator github-actions --pipeline-type nextflow --is-dev true
          else
            echo "❌ Tracer binary not found anywhere on the system"
            echo "This might indicate the tracer installation failed"
            echo "Skipping tracer init..."
          fi

      - name: Run pipeline with Conda
        working-directory: pipelines/linux-x86-amazon-linux/nextflow-conda
        run: |
          export PATH="$HOME/miniconda/bin:$PATH"
          source "$HOME/.bashrc"
          ./run.sh

      - name: Check for tracer binary
        id: tracer_check
        run: |
          if command -v tracer >/dev/null 2>&1; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Verify tracer packages
        if: steps.tracer_check.outputs.found == 'true'
        run: |
          tracer info

      - name: Upload pipeline results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: conda-linux-x86-amazon-pipeline-results
          path: |
            pipelines/linux-x86-amazon-linux/nextflow-conda/results/
          retention-days: 7
