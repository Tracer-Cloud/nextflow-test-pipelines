name: Codespaces Pipeline Test

on:
  workflow_dispatch:
  push:
    paths:
      - "pipelines/codespaces/**"
      - ".github/workflows/codespaces.yml"
  schedule:
    - cron: "0 13 * * *" # Daily at 13:00 UTC

jobs:
  codespaces-pixi-test:
    name: Pixi Pipeline Test
    runs-on: ubuntu-latest
    env:
      TRACER_BIO: /root/.tracerbio/bin/tracer
    steps:
      - uses: actions/checkout@v4
      - name: Cache Pixi environment
        uses: actions/cache@v4
        with:
          path: |
            pipelines/codespaces/.pixi
          key: pixi-codespaces-${{ runner.os }}-${{ hashFiles('pipelines/codespaces/pixi.toml') }}
          restore-keys: |
            pixi-codespaces-${{ runner.os }}-
      - name: Install tracer
        continue-on-error: true
        run: |
          curl -sSL https://install.tracer.cloud | sudo bash

      - name: Run tracer init
        run: |
          sudo $TRACER_BIO init --pipeline-name github-actions --environment github-actions --user-operator github-actions --pipeline-type nextflow --is-dev true

      - name: Run pipeline with Pixi
        working-directory: pipelines/codespaces/nextflow-pixi
        run: |
          export PATH="$HOME/.pixi/bin:$PATH"
          echo "=== Running Codespaces Pixi Pipeline ==="
          ./run.sh

      - name: Verify tracer packages
        run: |
          sudo $TRACER_BIO info
      - name: Upload pixi pipeline results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: codespaces-pixi-pipeline-results
          path: |
            pipelines/codespaces/nextflow-pixi/results/
            pipelines/codespaces/nextflow-pixi/logs/
          retention-days: 7

  codespaces-conda-test:
    name: Conda Pipeline Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: 3.12
          miniforge-variant: Miniforge3
          miniforge-version: latest

      - name: Install tracer
        continue-on-error: true
        run: |
          curl -sSL https://install.tracer.cloud | sudo bash
          # Verify tracer installation
          if command -v tracer >/dev/null 2>&1; then
            echo "✅ Tracer installed successfully"
            tracer --version || echo "Tracer version check failed"
          else
            echo "❌ Tracer installation failed"
            exit 1
          fi

      - name: Run tracer init
        run: |
          sudo $TRACER_BIO init --pipeline-name github-actions --environment github-actions --user-operator github-actions --pipeline-type nextflow --is-dev true

      - name: Run pipeline with Conda
        working-directory: pipelines/codespaces/nextflow-conda
        run: |
          source ~/miniconda3/etc/profile.d/conda.sh
          echo "=== Running Codespaces Conda Pipeline ==="
          ./run.sh

      - name: Verify tracer packages
        run: |
          sudo $TRACER_BIO info
      - name: Upload conda pipeline results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: codespaces-conda-pipeline-results
          path: |
            pipelines/codespaces/nextflow-conda/results/
            pipelines/codespaces/nextflow-conda/logs/
          retention-days: 7

  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    needs: [codespaces-pixi-test, codespaces-conda-test]
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Clean up pixi environment
        working-directory: pipelines/codespaces/nextflow-pixi
        run: |
          echo "=== Cleaning up Pixi environment ==="
          if command -v pixi >/dev/null 2>&1; then
            export PATH="$HOME/.pixi/bin:$PATH"
            pixi run clean || true
          fi
          rm -rf results logs work .nextflow* 2>/dev/null || true
          echo "✅ Pixi cleanup completed"

      - name: Clean up conda environment
        working-directory: pipelines/codespaces/nextflow-conda
        run: |
          echo "=== Cleaning up Conda environment ==="
          rm -rf results logs work .nextflow* 2>/dev/null || true
          echo "✅ Conda cleanup completed"
