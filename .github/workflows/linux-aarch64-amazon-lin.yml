name: Nextflow Linux ARM64 Amazon Linux Pipelines

on:
  workflow_dispatch:
  push:
    paths:
      - "pipelines/linux-arm-amazon-linux/**"
      - ".github/workflows/linux-aarch64-amazon-lin.yml"
  schedule:
    - cron: "0 11 * * *" # Daily at 11:00 UTC

jobs:
  linux-arm64-amazon-pixi:
    name: Pixi Pipeline
    runs-on: ubuntu-24.04-arm
    env:
      TRACER_BIO: /root/.tracerbio/bin/tracer
    container:
      image: public.ecr.aws/amazonlinux/amazonlinux:2023
    steps:
      - name: Install system dependencies
        run: |
          yum update -y
          yum install -y wget git bash which sudo tar gzip --allowerasing

      - uses: actions/checkout@v4

      - name: Install Pixi
        run: |
          curl -fsSL https://pixi.sh/install.sh | bash
          echo "$HOME/.pixi/bin" >> $GITHUB_PATH

      - name: Cache Pixi environment
        uses: actions/cache@v4
        with:
          path: |
            pipelines/linux-arm-amazon-linux/.pixi
          key: pixi-linux-arm64-amazon-${{ runner.os }}-${{ hashFiles('pipelines/linux-arm-amazon-linux/pixi.toml') }}
          restore-keys: |
            pixi-linux-arm64-amazon-${{ runner.os }}-

      - name: Install Pixi dependencies
        working-directory: pipelines/linux-arm-amazon-linux/nextflow-pixi
        run: |
          export PATH="$HOME/.pixi/bin:$PATH"
          pixi install || true
      - name: Install Tracer dependencies
        run: |
          dnf install -y gcc gcc-c++ make pkgconfig elfutils-libelf-devel zlib-devel llvm clang

      - name: Install tracer
        run: |
          curl -sSL https://install.tracer.cloud/ | sudo bash

      - name: Run tracer init
        run: |
          sudo $TRACER_BIO init --pipeline-name github-actions --environment github-actions --user-operator github-actions --pipeline-type nextflow --is-dev true

      - name: Run pipeline with Pixi
        working-directory: pipelines/linux-arm-amazon-linux/nextflow-pixi
        run: |
          export PATH="$HOME/.pixi/bin:$PATH"
          echo "=== Running Nextflow Pipeline with Pixi ==="
          ./run.sh

      - name: Verify tracer packages
        uses: ./.github/actions/verify-tracer
        with:
          required_processes: "STAR,FastQC,salmon,samtools"
          sleep_duration: "10"
          use_sudo: "true"
          binary: "${{ env.TRACER_BIO }}"

      - name: Upload pipeline results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pixi-linux-arm64-amazon-pipeline-results
          path: |
            pipelines/linux-arm-amazon-linux/nextflow-pixi/results/
          retention-days: 7

  linux-arm64-amazon-conda:
    name: Conda Pipeline
    runs-on: ubuntu-24.04-arm
    env:
      TRACER_BIO: /root/.tracerbio/bin/tracer
    container:
      image: public.ecr.aws/amazonlinux/amazonlinux:2023
    steps:
      - name: Install system dependencies
        run: |
          yum update -y
          yum install -y wget git bash which sudo bzip2 tar gzip --allowerasing
      - uses: actions/checkout@v4
      - name: Install Miniconda
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh -O miniconda.sh
          bash miniconda.sh -b -p "$HOME/miniconda"
          echo 'export PATH="$HOME/miniconda/bin:$PATH"' >> "$HOME/.bashrc"
          source "$HOME/.bashrc"

      - name: Install Conda environment
        working-directory: pipelines/linux-arm-amazon-linux/nextflow-conda
        run: |
          export PATH="$HOME/miniconda/bin:$PATH"
          conda env update -f environment-minimal.yml || true
          source "$HOME/.bashrc"

      - name: Install Tracer dependencies
        run: |
          dnf install -y gcc gcc-c++ make pkgconfig elfutils-libelf-devel zlib-devel llvm clang

      - name: Install tracer
        run: |
          curl -sSL https://install.tracer.cloud/ | sudo bash

      - name: Run tracer init
        run: |
          sudo $TRACER_BIO init --pipeline-name github-actions --environment github-actions --user-operator github-actions --pipeline-type nextflow --is-dev true

      - name: Run pipeline with Conda
        working-directory: pipelines/linux-arm-amazon-linux/nextflow-conda
        run: |
          export PATH="$HOME/miniconda/bin:$PATH"
          source "$HOME/.bashrc"
          ./run.sh

      - name: Verify tracer packages
        uses: ./.github/actions/verify-tracer
        with:
          required_processes: "STAR,FastQC,salmon,samtools"
          sleep_duration: "10"
          use_sudo: "true"
          binary: "${{ env.TRACER_BIO }}"

      - name: Upload pipeline results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: conda-linux-arm64-amazon-pipeline-results
          path: |
            pipelines/linux-arm-amazon-linux/nextflow-conda/results/
          retention-days: 7
