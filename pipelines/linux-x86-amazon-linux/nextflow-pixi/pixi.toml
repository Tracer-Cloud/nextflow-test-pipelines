[project]
name = "nextflow-minimal-pixi-linux-x86-ubuntu"
description = "Minimal Nextflow pipeline using Pixi for dependency management (Linux x86 Ubuntu)"
version = "1.0.0"
authors = ["Tracer Bioinformatics Team"]
channels = ["conda-forge", "bioconda"]
platforms = ["linux-64"]

[dependencies]
nextflow = "==24.10.0"
openjdk = "==17.0.11"
python = "==3.12"

grep = "*"
tar = "*"
coreutils = "*"
findutils = "*"

fastqc = "==0.12.1"
star = "*"
samtools = "==1.21"
bwa = "*"


[tasks]
pipeline = "nextflow -C nextflow.config -C custom.config -log logs/nextflow.log run main.nf --outdir results"
test = "nextflow -C nextflow.config -C custom.config -log logs/nextflow.log run main.nf --outdir test_results"
setup = """
mkdir -p logs results test_results
echo "Created necessary directories"
echo "Configuration files:"
ls -la *.config 2>/dev/null || echo "No config files found"
"""
check-env = { cmd = [
    "/bin/sh",
    "-c",
    """
    echo '=== Pixi Environment Check ===' && \
    echo 'FastQC version:' && \
    fastqc --version && \
    echo 'STAR version:' && \
    (STAR --version 2>/dev/null || echo 'STAR not available') && \
    echo '' && \
    echo 'Samtools version:' && \
    samtools sort --version | head -1 && \
    echo '' && \
    echo 'BWA version:' && \
    bwa 2>&1 | head -3 | grep Version || echo 'BWA not available' && \
    echo '' && \
    echo '=== Environment Ready ==='
    """
]}
clean = """
rm -rf results logs work test_results custom_results
rm -f .nextflow* 2>/dev/null || true
echo "Cleaned up all results and logs"
"""
dev = """
echo "=== Development Workflow ==="
pixi run clean
pixi run setup
pixi run check-env
pixi run test
echo "=== Development Workflow Complete ==="
"""
versions = "pixi run pipeline"
[feature.dev.dependencies]
nextflow = ">=24.10.0"
[environments]
default = ["dev"] 