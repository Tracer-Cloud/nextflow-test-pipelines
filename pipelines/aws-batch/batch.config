// Generate a custom UUID that will be consistent across this config
params {
    customUUID = java.util.UUID.randomUUID().toString()
    // S3 bucket for work directory - make configurable
    s3WorkBucket = 'tracer-nxf-work'
}

workDir = "s3://${params.s3WorkBucket}/work"

process {
    executor = 'awsbatch'
    queue = 'NextflowCPU'

    // Default resource requirements
    cpus = 1
    memory = '2 GB'
    time = '1h'

    // Set the env variables for the containers - using the custom UUID
    containerOptions = "--env TRACER_TRACE_ID=${params.customUUID}"

    // Error handling
    errorStrategy = 'retry'
    maxRetries = 2

    resourceLabels = [
        'launch-time': new java.util.Date().format('yyyy-MM-dd_HH-mm-ss'),
        'custom-session-uuid': "${params.customUUID}",
        'project': 'tracer-bioinformatics'
    ]
}

aws {
    region = 'us-east-1'
    batch {
        cliPath = '/usr/local/aws-cli/v2/current/bin/aws'
        maxSpotAttempts = 5
        volumes = '/tmp'
    }

    // S3 client configuration
    client {
        maxConnections = 20
        connectionTimeout = 300000
        uploadStorageClass = 'INTELLIGENT_TIERING'
        storageEncryption = 'AES256'
        maxErrorRetry = 3
        socketTimeout = 300000
    }
}

// Enable detailed logging and monitoring
trace {
    enabled = true
    file = "s3://${params.s3WorkBucket}/logs/trace.txt"
    overwrite = true
}

report {
    enabled = true
    file = "s3://${params.s3WorkBucket}/logs/report.html"
    overwrite = true
}

timeline {
    enabled = true
    file = "s3://${params.s3WorkBucket}/logs/timeline.html"
    overwrite = true
}

// Cleanup configuration
cleanup = true

// Enable tower integration if available
tower {
    enabled = false
    endpoint = 'https://tower.nf'
}
