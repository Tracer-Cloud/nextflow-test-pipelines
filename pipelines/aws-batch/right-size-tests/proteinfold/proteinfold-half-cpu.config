// Define check_max function for resource validation
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}

// Set default max values if not provided
params {
    max_cpus = 32
    max_memory = '256.GB'
    max_time = '240.h'
}

process {
    resourceLabels = [
        'pipeline-name': 'proteinfold',
        'right-size-test': 'half-cpu',
        'launch-time': new java.util.Date().format('yyyy-MM-dd_HH-mm-ss'),
    ]

    cpus   = 1
    memory = 6.GB

    withLabel:process_single {
        cpus   = 1
        memory = 6.GB
    }
    withLabel:process_low {
        cpus   = 1
        memory = 12.GB
    }
    withLabel:process_medium {
        cpus   = 3
        memory = 36.GB
    }
    withLabel:process_high {
        cpus   = 6
        memory = 72.GB
    }
    withLabel:process_high_memory {
        memory = 200.GB
    }

    withName: 'RUN_ALPHAFOLD2|RUN_ALPHAFOLD2_PRED' {
        // max vcpu quota for g4dn instances is 8, which means can only run at most
        // a single g4dn.2xlarge.
        cpus = 3
        // memory on g4dn.2xlarge 32 GB
        memory = 30.GB
        queue = 'NextflowGPU'
    }
}
