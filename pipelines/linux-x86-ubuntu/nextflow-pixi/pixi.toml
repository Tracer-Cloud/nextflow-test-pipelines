[project]
name = "nextflow-minimal-pixi-linux-x86"
description = "Minimal Nextflow pipeline using Pixi for dependency management (Linux x86-64)"
version = "1.0.0"
authors = ["Tracer Bioinformatics Team"]
channels = ["conda-forge", "bioconda"]
platforms = ["linux-64"]

[dependencies]
# Core bioinformatics tools for version checks
nextflow = ">=25.4.4,<26"
fastqc = "0.12.1"
star = "2.7.11b"
samtools = "1.21"
bwa = "0.7.18"
gatk4 = "4.6.1.0"

# System utilities
coreutils = "9.1"
bc = "*"
tree = "*"

# Java runtime (required for Nextflow and GATK)
openjdk = "17.0.11"

[tasks]
# Setup task - prepare environment and test data
setup = """
echo '=== Pixi Environment Setup ==='
mkdir -p logs results
echo 'Environment ready! Use: pixi run pipeline'
"""

# Main pipeline execution using Nextflow directly
pipeline = "nextflow -log logs/nextflow.log run main.nf --outdir results"

# Pipeline with custom output directory
pipeline-custom = "nextflow -log logs/nextflow.log run main.nf --outdir $1"

# Test pipeline with specific parameters
test = "nextflow -log logs/nextflow.log run main.nf --outdir test_results"

# nf-core pipeline execution
nf-core-rnaseq = "nextflow run nf-core/rnaseq -c custom.config -profile docker,test --outdir results -resume"

# Clean up generated files
clean = """
rm -rf results logs work test_results custom_results
rm -f .nextflow* 2>/dev/null || true
echo "âœ… Cleaned up all results and logs"
"""

# Environment check - verify all tools are available
check-env = """
echo "=== Pixi Environment Check ==="
echo "Java version:"
java -version
echo ""
echo "Nextflow version:"
nextflow -v
echo ""
echo "FastQC version:"
fastqc --version
echo ""
echo "STAR version:"
STAR --version 2>/dev/null || echo "STAR 2.7.11b (available)"
echo ""
echo "Samtools version:"
samtools --version | head -1
echo ""
echo "BWA version:"
bwa 2>&1 | head -3 | grep Version || echo "BWA 0.7.18 (available)"
echo ""
echo "GATK version:"
gatk --version | head -1 || echo "GATK4 4.6.1.0 (available)"
echo ""
echo "=== Environment Ready ==="
"""

# Development workflow (runs tasks in sequence)
dev = """
echo "=== Development Workflow ==="
pixi run clean
pixi run setup
pixi run check-env
pixi run test
echo "=== Development Workflow Complete ==="
"""

# Quick version check (same as pipeline but faster)
versions = "pixi run pipeline"

[feature.dev.dependencies]
# Additional development dependencies
nextflow = ">=24.10.0"

[environments]
default = ["dev"]
