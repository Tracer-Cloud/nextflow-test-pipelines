AWSTemplateFormatVersion: '2010-09-09'
Description: Creates an AWS Batch environment for Nextflow pipelines, including
  IAM resources, S3, and Batch. Updated description
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID to boot compute into
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of Subnets to boot into
  InstanceConnectEndpointSubnet:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet in which to place EC2 Instance Connect Endpoint
Resources:
  NextflowWorkBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: tracer-nxf-work
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Id: DeleteAfter30Days
            Status: Enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
  NextflowOutputsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: tracer-nxf-outputs
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
  NextflowBatchInstanceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:putObject
                Resource: !Sub ${NextflowWorkBucket.Arn}/*
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub ${NextflowOutputsBucket.Arn}/metrics/*
              - Effect: Allow
                Action:
                  - s3:getObject
                  - s3:getObjectVersions
                  - s3:headObject
                  - s3:listBucket
                  - s3:PutObject
                Resource: arn:aws:s3:::*
              - Effect: Allow
                Action:
                  - pricing:GetProducts
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:*
                Resource: '*'
        - PolicyName: AWSBatchPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AWSBatchPolicyStatement1
                Effect: Allow
                Action:
                  - ec2:DescribeAccountAttributes
                  - ec2:DescribeInstances
                  - ec2:DescribeInstanceStatus
                  - ec2:DescribeInstanceAttribute
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeKeyPairs
                  - ec2:DescribeImages
                  - ec2:DescribeImageAttribute
                  - ec2:DescribeSpotInstanceRequests
                  - ec2:DescribeSpotFleetInstances
                  - ec2:DescribeSpotFleetRequests
                  - ec2:DescribeSpotPriceHistory
                  - ec2:DescribeSpotFleetRequestHistory
                  - ec2:DescribeVpcClassicLink
                  - ec2:DescribeLaunchTemplateVersions
                  - ec2:CreateLaunchTemplate
                  - ec2:DeleteLaunchTemplate
                  - ec2:RequestSpotFleet
                  - ec2:CancelSpotFleetRequests
                  - ec2:ModifySpotFleetRequest
                  - ec2:TerminateInstances
                  - ec2:RunInstances
                  - autoscaling:DescribeAccountLimits
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:DescribeLaunchConfigurations
                  - autoscaling:DescribeAutoScalingInstances
                  - autoscaling:DescribeScalingActivities
                  - autoscaling:CreateLaunchConfiguration
                  - autoscaling:CreateAutoScalingGroup
                  - autoscaling:UpdateAutoScalingGroup
                  - autoscaling:SetDesiredCapacity
                  - autoscaling:DeleteLaunchConfiguration
                  - autoscaling:DeleteAutoScalingGroup
                  - autoscaling:CreateOrUpdateTags
                  - autoscaling:SuspendProcesses
                  - autoscaling:PutNotificationConfiguration
                  - autoscaling:TerminateInstanceInAutoScalingGroup
                  - ecs:DescribeClusters
                  - ecs:DescribeContainerInstances
                  - ecs:DescribeTaskDefinition
                  - ecs:DescribeTasks
                  - ecs:ListAccountSettings
                  - ecs:ListClusters
                  - ecs:ListContainerInstances
                  - ecs:ListTaskDefinitionFamilies
                  - ecs:ListTaskDefinitions
                  - ecs:ListTasks
                  - ecs:CreateCluster
                  - ecs:DeleteCluster
                  - ecs:RegisterTaskDefinition
                  - ecs:DeregisterTaskDefinition
                  - ecs:RunTask
                  - ecs:StartTask
                  - ecs:StopTask
                  - ecs:UpdateContainerAgent
                  - ecs:DeregisterContainerInstance
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - iam:GetInstanceProfile
                  - iam:GetRole
                Resource: '*'
              - Sid: AWSBatchPolicyStatement2
                Effect: Allow
                Action: ecs:TagResource
                Resource:
                  - arn:aws:ecs:*:*:task/*_Batch_*
              - Sid: AWSBatchPolicyStatement3
                Effect: Allow
                Action: iam:PassRole
                Resource: '*'
                Condition:
                  StringEquals:
                    iam:PassedToService:
                      - ec2.amazonaws.com
                      - ec2.amazonaws.com.cn
                      - ecs-tasks.amazonaws.com
              - Sid: AWSBatchPolicyStatement4
                Effect: Allow
                Action: iam:CreateServiceLinkedRole
                Resource: '*'
                Condition:
                  StringEquals:
                    iam:AWSServiceName:
                      - spot.amazonaws.com
                      - spotfleet.amazonaws.com
                      - autoscaling.amazonaws.com
                      - ecs.amazonaws.com
              - Sid: AWSBatchPolicyStatement5
                Effect: Allow
                Action:
                  - ec2:CreateTags
                Resource: '*'
                Condition:
                  StringEquals:
                    ec2:CreateAction: RunInstances
        - PolicyName: AdditionalPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - s3-object-lambda:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - secretsmanager:ListSecrets
                Resource: arn:aws:secretsmanager:*:*:secret:rds*
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:DescribeInstanceInformation
                  - ssm:StartSession
                Resource: '*'
  InstanceConnectEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 Instance Connect Endpoint Security Group
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
      VpcId: !Ref VPC
  InstanceConnectEndpoint:
    Type: AWS::EC2::InstanceConnectEndpoint
    Properties:
      SecurityGroupIds:
        - !Ref InstanceConnectEndpointSecurityGroup
      SubnetId: !Ref InstanceConnectEndpointSubnet
  NextflowBatchInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref NextflowBatchInstanceIAMRole
  NextflowBatchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Nextflow Batch EC2 Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
      VpcId: !Ref VPC
  EICEToInstanceRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref InstanceConnectEndpointSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      DestinationSecurityGroupId: !Ref NextflowBatchSecurityGroup
  InstanceFromEICERule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref NextflowBatchSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      SourceSecurityGroupId: !Ref InstanceConnectEndpointSecurityGroup
  NextflowLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              Encrypted: false
              VolumeSize: 500
              VolumeType: gp3
        MetadataOptions:
          HttpTokens: required
          InstanceMetadataTags: enabled
        NetworkInterfaces:
          - AssociatePublicIpAddress: true
            DeleteOnTermination: true
            DeviceIndex: 0
            Groups:
              - !Ref NextflowBatchSecurityGroup
        UserData: !Base64 |
          MIME-Version: 1.0
          Content-Type: multipart/mixed; boundary="==BOUNDARY=="

          --==BOUNDARY==
          MIME-Version: 1.0
          Content-Type: text/cloud-config; charset="us-ascii"

          #cloud-config
          yum_repos:
            vector:
              name: Vector
              baseurl: https://yum.vector.dev/stable/vector-0/$basearch/
              enabled: true
              gpgcheck: true
              gpgkey: https://keys.datadoghq.com/DATADOG_RPM_KEY_CURRENT.public
              priority: 1
          packages:
            - ec2-instance-connect
            - groff
            - less
            - patchelf
            - unzip
            - vector
          runcmd:
            # Configure ecs agent
            - echo ECS_MANIFEST_PULL_TIMEOUT=60m >> /etc/ecs/ecs.config
            - echo ECS_CONTAINER_START_TIMEOUT=60m >> /etc/ecs/ecs.config
            - echo ECS_CONTAINER_CREATE_TIMEOUT=60m >> /etc/ecs/ecs.config
            - echo ECS_DISABLE_IMAGE_CLEANUP=true >> /etc/ecs/ecs.config
            - echo ECS_IMAGE_PULL_BEHAVIOR=once >> /etc/ecs/ecs.config
            - echo ECS_RESERVED_MEMORY=256 >> /etc/ecs/ecs.config
            # Configure Docker daemon
            - |
              echo '{"max-concurrent-downloads": 1}' > /etc/docker/daemon.json
            # Install AWS CLI
            - curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
            - unzip awscliv2.zip
            - ./aws/install
            - patchelf --force-rpath --no-sort --set-rpath '$ORIGIN/../dist' /usr/local/aws-cli/v2/current/bin/aws
            # Configure Vector log collector; add --skip-healthchecks due to bug in aws_cloudwatch_logs sink;
            # add CAP_DAC_READ_SEARCH capability to read log files owned by root.
            - sed -i -e 's/validate/validate --skip-healthchecks/' -e '/^AmbientCapabilities=/ s/$/ CAP_DAC_READ_SEARCH/' /usr/lib/systemd/system/vector.service
            - systemctl daemon-reload
            - systemctl start vector
            # Install Tracer tool
            - echo "Installing tracer"
            - curl -sSL https://88872bab.tracer-client.pages.dev/installation-script-development.sh | bash -s -- TestBatchAWSEnvironmentNew
            # Pass environment variables directly to the tracer command
            - TRACER_DATABASE_HOST=tracer-cluster-v2.cluster-cdgizpzxtdp6.us-east-1.rds.amazonaws.com TRACER_DATABASE_NAME=tracer_db TRACER_DATABASE_SECRETS_ARN=arn:aws:secretsmanager:us-east-1:395261708130:secret:rds!cluster-cd690a09-953c-42e9-9d9f-1ed0b434d226-M0wZYA /.tracerbio/bin/tracer init --pipeline-name TestBatchAWSEnvironmentNew --environment aws_batch --pipeline-type rnaseq --user-operator aws_batch
          write_files:
            - path: /etc/vector/vector.yaml
              content: |
                sources:
                  ecs_init:
                    type: file
                    include:
                      - /var/log/ecs/ecs-init.log
                  ecs_agent:
                    type: file
                    include:
                      - /var/log/ecs/ecs-agent.log
                  cloud_init:
                    type: file
                    include:
                      - /var/log/cloud-init.log
                  journald:
                    type: journald
                  host_metrics:
                    type: host_metrics
                    scrape_interval_secs: 60
                transforms:
                  ecs_init_log_group:
                    type: remap
                    inputs:
                      - ecs_init
                    source: ."group-name" = "/ecs/init"
                  ecs_agent_log_group:
                    type: remap
                    inputs:
                      - ecs_agent
                    source: ."group-name" = "/ecs/agent"
                  cloud_init_log_group:
                    type: remap
                    inputs:
                      - cloud_init
                    source: ."group-name" = "/cloud-init"
                  journald_interesting:
                    type: filter
                    inputs:
                      - journald
                    condition:
                      type: vrl
                      source: to_int(.PRIORITY) <= 4 ?? false
                  journald_log_group:
                    type: remap
                    inputs:
                      - journald_interesting
                    source: ."group-name" = "/journald"
                  add_log_metadata:
                    type: aws_ec2_metadata
                    inputs:
                      - ecs_init_log_group
                      - ecs_agent_log_group
                      - cloud_init_log_group
                      - journald_log_group
                    fields:
                      - instance-id
                      - instance-type
                      - ami-id
                    tags:
                      - 'aws:autoscaling:groupName'
                    required: false
                  add_metrics_metadata:
                    type: aws_ec2_metadata
                    inputs:
                      - host_metrics
                    fields:
                      - instance-id
                      - instance-type
                      - ami-id
                    tags:
                      - 'aws:autoscaling:groupName'
                    required: false
                sinks:
                  cloudwatch_logs:
                    type: aws_cloudwatch_logs
                    inputs:
                      - add_log_metadata
                    group_name: '{{ ."group-name" }}'
                    stream_name: '{{ ."instance-id" }}'
                    retention:
                      days: 14
                      enabled: true
                    encoding:
                      codec: json
                  cloudwatch_metrics:
                    type: aws_cloudwatch_metrics
                    inputs:
                      - add_metrics_metadata
                    default_namespace: default
          --==BOUNDARY==--
  NextflowCPUComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      State: ENABLED
      Type: MANAGED
      ComputeResources:
        AllocationStrategy: BEST_FIT_PROGRESSIVE
        DesiredvCpus: 0
        Ec2Configuration:
          - ImageType: ECS_AL2023
        InstanceRole: !Ref NextflowBatchInstanceProfile
        InstanceTypes:
          - optimal
        LaunchTemplate:
          LaunchTemplateId: !Ref NextflowLaunchTemplate
          Version: !GetAtt NextflowLaunchTemplate.LatestVersionNumber
        MinvCpus: 0
        MaxvCpus: 1024
        Subnets: !Ref Subnets
        Type: EC2
        UpdateToLatestImageVersion: true
  NextflowGPUComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      State: ENABLED
      Type: MANAGED
      ComputeResources:
        AllocationStrategy: BEST_FIT_PROGRESSIVE
        DesiredvCpus: 0
        Ec2Configuration:
          - ImageType: ECS_AL2_NVIDIA
        InstanceRole: !Ref NextflowBatchInstanceProfile
        InstanceTypes:
          - g4dn
        LaunchTemplate:
          LaunchTemplateId: !Ref NextflowLaunchTemplate
          Version: !GetAtt NextflowLaunchTemplate.LatestVersionNumber
        MinvCpus: 0
        MaxvCpus: 256
        Subnets: !Ref Subnets
        Type: EC2
        UpdateToLatestImageVersion: true
  NextflowBatchCPUQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref NextflowCPUComputeEnvironment
          Order: 1
      JobQueueName: NextflowCPU
      Priority: 1
      State: ENABLED
  NextflowBatchGPUQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref NextflowGPUComputeEnvironment
          Order: 1
      JobQueueName: NextflowGPU
      Priority: 1
      State: ENABLED
